@startuml
title Klassendiagramm: Training & Dosisberechnung

class BenutzerEingabe {
  +hochladenCTScan()
  +hochladenPartikelparameter()
  +startenTraining()
  +startenDosisberechnung()
  +anpassenParameter()
  +bestätigenErgebnis()
}

class System {
  +validiereDaten()
  +zeigeFehlermeldung()
  +speichereModell()
  +setzeTrainingsFlag()
  +berechneDosisverteilung()
  +zeigeErgebnisse()
  +exportiereDaten()
}

class CTScan {
  -Dateiformat: Nifty
  -Auflösungsstufen: List<int>
}

class Partikelparameter {
  -EnergieStufen: List<float>
  -Spektrum: List<float>
}

class TrainingsPipeline {
  +herunterskalierenDaten()
  +trainiereNetz()
  +validiereNetz()
  +stoppeTraining()
}

class NeuronalesNetz {
  +trainiere()
  +inferenz()
  +speichereGewichte()
}

class Inferenz {
  +berechneDosisverteilung()
  +integriereEnergien()
  +wendeGaußQuadraturAn()
}

class Visualisierung {
  +zeige3DModell()
  +zoomFunktion()
  +rotation()
}

class Speicherung {
  +speichereDosisverteilung()
  +logFehler()
  +exportiereErgebnisse()
}

BenutzerEingabe --> System : interagiert mit
System --> CTScan : verarbeitet
System --> Partikelparameter : verarbeitet
System --> TrainingsPipeline : führt aus
TrainingsPipeline --> NeuronalesNetz : trainiert
NeuronalesNetz --> Speicherung : speichert Gewichte
System --> Inferenz : startet
Inferenz --> NeuronalesNetz : nutzt trainierte Modelle
Inferenz --> Visualisierung : zeigt Ergebnisse
System --> Speicherung : speichert Daten
System --> Visualisierung : zeigt Ergebnisse

@enduml
